angular.module("ng-data-map",[]),angular.module("ng-data-map").factory("MapObjects",function(){var API={};return API.closest=function(coords1,data){var closest;return angular.forEach(data,function(feature){var coords2=feature.getGeometry().get(),distance=google.maps.geometry.spherical.computeDistanceBetween(coords1,coords2);(!closest||closest.distance>distance)&&(closest={marker:feature,distance:distance})}),closest.marker},API.map=null,API}),angular.module("ng-data-map").directive("control",function(){return{restrict:"E",scope:{position:"@"},require:"^map",link:function($scope,$element,$attrs,parent){$scope.$watch(function(){parent.getMap()},function(){var map=parent.getMap(),position=$scope.position.split(/(?=[A-Z])/).join("_").toUpperCase();$scope.$watch(function(){return $element[0].innerHTML},function(){var controlDiv=document.createElement("div");map.controls[google.maps.ControlPosition[position]].pop(),controlDiv.innerHTML=$element[0].innerHTML,map.controls[google.maps.ControlPosition[position]].push(controlDiv)})})}}}),angular.module("ng-data-map").directive("geopoints",["MapObjects","$http",function(MapObjects,$http){return{restrict:"E",scope:{url:"=",events:"=",options:"=",visible:"="},require:"^map",link:function($scope,$element,$attrs,parent){$scope.$watch(function(){parent.getMap()},function(){var map=parent.getMap(),url=$scope.url,options=$scope.options?$scope.options:function(){return{}},markers=[];$scope.$watch(function(){return $scope.options},function(){angular.forEach(markers,function(marker){marker.setOptions($scope.options(marker,MapObjects))})}),$scope.$watch(function(){return $scope.visible},function(){angular.forEach(markers,function(marker){marker.setVisible($scope.visible)})}),$http.get(url).success(function(data){angular.forEach(data.features,function(m){var opts={map:map,position:new google.maps.LatLng(m.geometry.coordinates[1],m.geometry.coordinates[0])},marker=new google.maps.Marker(opts);marker.properties=m.properties,marker.geometry=m.geometry,marker.getProperty=function(p){return this.properties[p]},marker.setOptions(options(marker,MapObjects)),markers.push(marker),angular.forEach($scope.events,function(val,key){google.maps.event.addListener(marker,key,function(e){val(e,marker,MapObjects,markers)})})})})})}}}]),angular.module("ng-data-map").directive("geopolygons",["MapObjects","$http",function(MapObjects,$http){return{restrict:"E",scope:{url:"=",events:"=",options:"=",visible:"="},require:"^map",link:function($scope,$element,$attrs,parent){$scope.$watch(function(){parent.getMap()},function(){var map=parent.getMap(),url=$scope.url,polygons=[],options=$scope.options?$scope.options:function(){return{}};$scope.$watch(function(){return $scope.options},function(){angular.forEach(polygons,function(p){p.setOptions($scope.options(p,MapObjects))})}),$http.get(url).success(function(data){angular.forEach(data.features,function(p){for(var j=0;j<p.geometry.coordinates.length;j++){for(var coords=p.geometry.coordinates[j],k=0;k<p.geometry.coordinates[j].length;k++)coords[k]=new google.maps.LatLng(coords[k][1],coords[k][0]);var polygon=new google.maps.Polygon({paths:coords});polygon.setOptions(options(p,MapObjects)),polygon.setMap(map),polygon.properties=p.properties,polygon.geometry=p.geometry,polygon.getProperty=function(p){return this.properties[p]},polygons.push(polygon),angular.forEach($scope.events,function(val,key){google.maps.event.addListener(polygon,key,function(e){val(e,this,MapObjects)})})}})})})}}}]),angular.module("ng-data-map").directive("infowindow",function(){return{restrict:"E",scope:{position:"="},require:"^map",compile:function(){return function($scope,$element,$attrs,parent){$scope.$watch(function(){parent.getMap()},function(){var map=parent.getMap(),infowindow=new google.maps.InfoWindow({content:null,position:null});$scope.$watch(function(){return $element[0].innerHTML+$scope.position},function(){infowindow.setContent($element[0].innerHTML),infowindow.setPosition($scope.position),infowindow.open(map)})})}}}}),angular.module("ng-data-map").directive("map",["MapObjects",function(MapObjects){return{restrict:"AE",scope:{center:"=",events:"=",options:"="},controller:function($scope){this.getMap=function(){return $scope.map}},transclude:!0,link:function($scope,elem){var map,events=$scope.events,center=$scope.center,options=$scope.options?$scope.options:{},latitude=center?center[0]:47.6,longitude=center?center[1]:-122.3;options.center=new google.maps.LatLng(latitude,longitude),options.zoom=options.zoom?options.zoom:8,map=new google.maps.Map(elem[0],options),angular.forEach(events,function(val,key){google.maps.event.addListener(map,key,function(e){val(e,MapObjects)})}),$scope.map=map}}}]),angular.module("ng-data-map").directive("marker",["MapObjects",function(MapObjects){return{restrict:"E",scope:{options:"=",events:"=",position:"=",lat:"=",lng:"=",decimals:"="},require:"^map",link:function($scope,$element,$attrs,parent){$scope.$watch(function(){parent.getMap()},function(){var map=parent.getMap(),decimals=$scope.decimals,events=$scope.events?$scope.events:{},options=$scope.options?$scope.options:{},round=function(val){return decimals||0===decimals?Math.round(Math.pow(10,decimals)*val)/Math.pow(10,decimals):val},curPosition=function(){return $scope.position?new google.maps.LatLng($scope.position[0],$scope.position[1]):$scope.lat&&$scope.lng?new google.maps.LatLng($scope.lat,$scope.lng):void 0};options.position=curPosition(),options.map=map;var marker=new google.maps.Marker(options);angular.forEach(events,function(val,key){google.maps.event.addListener(marker,key,function(e){val(e,MapObjects)})}),$scope.$watch("[position, lat, lng]",function(){marker.setPosition(curPosition())},!0),google.maps.event.addListener(marker,"drag",function(){$scope.$apply(function(){var lat=round(marker.getPosition().lat()),lng=round(marker.getPosition().lng());$scope.position?$scope.position=[lat,lng]:$scope.lat&&$scope.lng&&($scope.lat=lat,$scope.lng=lng)})})})}}}]),angular.module("ng-data-map").directive("overlay",["MapObjects",function(){return{restrict:"E",scope:{url:"=",opacity:"=",bounds:"=",visible:"="},require:"^map",link:function($scope,$element,$attrs,parent){$scope.$watch(function(){parent.getMap()},function(){function isFloat(n){return n===+n&&n!==(n||0)}var map=parent.getMap(),parseOpacity=function(){return isFloat($scope.opacity)?$scope.opacity:parseFloat($scope.opacity)},deleteOverlay=function(){overlay&&(overlay.setMap(null),overlay=null)},newOverlay=function(){deleteOverlay();var overlay=new google.maps.GroundOverlay($scope.url,$scope.bounds,{clickable:!1});return overlay.setOpacity(parseOpacity()/100),overlay.setMap($scope.visible!==!1?map:null),overlay},overlay=newOverlay();$scope.$watch("url + bounds",function(){overlay=newOverlay()}),$scope.$watch("opacity",function(){overlay.setOpacity(parseOpacity()/100)}),$scope.$watch("visible",function(){overlay.setMap($scope.visible!==!1?map:null)})})}}}]),angular.module("ng-data-map").directive("polygons",["MapObjects",function(){return{restrict:"E",scope:{coords:"=",options:"=",properties:"=",opacity:"=",visible:"="},require:"^map",link:function($scope,$element,$attrs,parent){$scope.$watch(function(){parent.getMap()},function(){parent.getMap()})}}}]),angular.module("ng-data-map").directive("polylines",["MapObjects",function(){return{restrict:"E",scope:{coords:"=",options:"=",properties:"=",opacity:"=",visible:"="},require:"^map",link:function($scope,$element,$attrs,parent){$scope.$watch(function(){parent.getMap()},function(){parent.getMap()})}}}]);