angular.module("ngMaps",[]),angular.module("ngMaps").factory("MapObjects",function(){var API={};return API.closest=function(coords1,data){var closest;return angular.forEach(data,function(feature){var coords2=feature.getGeometry().get(),distance=google.maps.geometry.spherical.computeDistanceBetween(coords1,coords2);(!closest||closest.distance>distance)&&(closest={marker:feature,distance:distance})}),closest.marker},API.map=null,API}),angular.module("ngMaps").directive("circles",["MapObjects",function(MapObjects){return{restrict:"E",scope:{geometries:"=",events:"=",visible:"=",options:"=",opacity:"="},require:"^map",link:function($scope,$element,$attrs,parent){$scope.$watch(function(){parent.getMap()},function(){var map=parent.getMap(),circles=[];$scope.$watch("visible",function(){angular.forEach(circles,function(c){c.setVisible($scope.visible)})}),$scope.$watch("options",function(){angular.forEach(circles,function(c,i){c.setOptions($scope.options(c,map,i,MapObjects))})}),$scope.$watch("geometries",function(){newData()}),$scope.$watch("opacity",function(){$scope.opacity&&angular.forEach(circles,function(c){c.setOptions({fillOpacity:$scope.opacity/100})})});var newData=function(){angular.forEach(circles,function(c){c.setMap(null)}),circles=[],angular.forEach($scope.geometries,function(c,i){var opts=$scope.options?$scope.options(c,map,i,MapObjects):{};opts.center=new google.maps.LatLng(c.center[0],c.center[1]),opts.radius=c.radius,opts.map=map;var circle=new google.maps.Circle(opts);circles.push(circle),angular.forEach($scope.events,function(val,key){google.maps.event.addListener(circle,key,function(e){val(e,this,i,MapObjects,circles)})})})}})}}}]),angular.module("ngMaps").directive("control",function(){return{restrict:"E",scope:{position:"@",visible:"="},require:"^map",link:function($scope,$element,$attrs,parent){$scope.$watch(function(){parent.getMap()},function(){var map=parent.getMap(),position=$scope.position.split(/(?=[A-Z])/).join("_").toUpperCase();$scope.$watch(function(){return $element[0].innerHTML},function(){var controlDiv=document.createElement("div");map.controls[google.maps.ControlPosition[position]].pop(),$scope.visible!==!1&&(controlDiv.innerHTML=$element[0].innerHTML),map.controls[google.maps.ControlPosition[position]].push(controlDiv)})})}}}),angular.module("ngMaps").directive("geopoints",["MapObjects","$http",function(MapObjects,$http){return{restrict:"E",scope:{url:"=",events:"=",visible:"=",options:"="},require:"^map",link:function($scope,$element,$attrs,parent){$scope.$watch(function(){parent.getMap()},function(){var map=parent.getMap(),markers=[];$scope.$watch(function(){return $scope.options},function(){angular.forEach(markers,function(m,i){marker.setOptions($scope.options(m,map,i,MapObjects))})}),$scope.$watch(function(){return $scope.visible},function(){angular.forEach(markers,function(marker){marker.setVisible($scope.visible)})}),$scope.$watch(function(){return $scope.url},function(){newData($scope.url)});var newData=function(url){$http.get(url).success(function(data){angular.forEach(markers,function(m){m.setMap(null)}),markers=[],angular.forEach(data.features,function(m,i){var opts=$scope.options?$scope.options(m,map,i,MapObjects):{};opts.position=new google.maps.LatLng(m.geometry.coordinates[1],m.geometry.coordinates[0]),opts.visible=$scope.visible,opts.map=map;var marker=new google.maps.Marker(opts);marker.properties=m.properties,marker.geometry=m.geometry,marker.getProperty=function(p){return this.properties[p]},markers.push(marker),angular.forEach($scope.events,function(val,key){google.maps.event.addListener(marker,key,function(e){val(e,marker,i,MapObjects,markers)})})})})}})}}}]),angular.module("ngMaps").directive("geopolygons",["MapObjects","$http",function(MapObjects,$http){return{restrict:"E",scope:{url:"=",events:"=",options:"=",visible:"=",opacity:"="},require:"^map",link:function($scope,$element,$attrs,parent){$scope.$watch(function(){parent.getMap()},function(){function PolygonCollection(p,i){this.type=p.geometry.type,this.properties=p.properties,this.setOptions=function(o){angular.forEach(polygons,function(p){p.setOptions(o)})},this.setVisible=function(o){angular.forEach(polygons,function(p){p.setVisible(o)})},this.getMap=function(o){angular.forEach(polygons,function(p){p.getMap(o)})};var polygons=[],opts=$scope.options?$scope.options(p,i,map,MapObjects):{};if(opts.fillOpacity=$scope.opacity?$scope.opacity/100:1,"MultiPolygon"===this.type)angular.forEach(p.geometry.coordinates,function(c){angular.forEach(c,function(c2){var coords=[];angular.forEach(c2,function(c3){coords.push(new google.maps.LatLng(c3[1],c3[0]))});var polygon=new google.maps.Polygon({paths:coords});polygon.setOptions(opts),polygon.setMap(map),polygons.push(polygon)})});else{var coords=[];angular.forEach(p.geometry.coordinates,function(c){angular.forEach(c,function(c2){coords.push(new google.maps.LatLng(c2[1],c2[0]))})});var polygon=new google.maps.Polygon({paths:coords});polygon.setOptions(opts),polygon.setMap(map),polygons.push(polygon)}this.polygons=polygons}var map=parent.getMap(),polygons=[];$scope.$watch("options",function(){angular.forEach(polygons,function(p,i){var opts=$scope.options?$scope.options(p,map,i,MapObjects):{};opts.fillOpacity=$scope.opacity?$scope.opacity/100:1,p.setOptions(opts)})}),$scope.$watch("opacity",function(){$scope.opacity&&angular.forEach(polygons,function(p){p.setOptions({fillOpacity:$scope.opacity/100})})}),$scope.$watch("visible",function(){angular.forEach(polygons,function(p){p.setVisible($scope.visible)})}),$scope.$watch("url",function(){newData($scope.url)});var newData=function(url){$http.get(url).success(function(data){angular.forEach(polygons,function(p){p.setMap(null)}),polygons=[],angular.forEach(data.features,function(p,i){var PC=new PolygonCollection(p,i);polygons.push(PC),angular.forEach(PC.polygons,function(polygon){angular.forEach($scope.events,function(val,key){google.maps.event.addListener(polygon,key,function(e){val(e,PC,MapObjects)})})})})})}})}}}]),angular.module("ngMaps").directive("infowindow",function(){return{restrict:"E",scope:{options:"=",position:"=",visible:"="},require:"^map",compile:function(){return function($scope,$element,$attrs,parent){$scope.$watch(function(){parent.getMap()},function(){var map=parent.getMap(),opts=$scope.options?$scope.options():{},infowindow=new google.maps.InfoWindow(opts);$scope.$watch(function(){return $element[0].innerHTML+$scope.position},function(){if($scope.position.constructor===Array)var pos=new google.maps.LatLng($scope.position[0],$scope.position[1]);else var pos=$scope.position;infowindow.setContent($element[0].innerHTML),infowindow.setPosition(pos),infowindow.open(map)})})}}}}),angular.module("ngMaps").directive("map",["MapObjects",function(MapObjects){return{restrict:"AE",scope:{center:"=",zoom:"=",events:"=",options:"="},controller:function($scope){this.getMap=function(){return $scope.map}},transclude:!0,link:function($scope,elem){var events=$scope.events,center=$scope.center,options=$scope.options?$scope.options():{},latitude=center?center[0]:47.6,longitude=center?center[1]:-122.3;options.center=new google.maps.LatLng(latitude,longitude),options.zoom=$scope.zoom?$scope.zoom:8;var map=new google.maps.Map(elem[0],options);angular.forEach(events,function(val,key){google.maps.event.addListener(map,key,function(e){val(e,MapObjects)})}),$scope.map=map}}}]),angular.module("ngMaps").directive("marker",["MapObjects",function(MapObjects){return{restrict:"E",scope:{position:"=",options:"=",events:"=",lat:"=",lng:"=",decimals:"="},require:"^map",link:function($scope,$element,$attrs,parent){$scope.$watch(function(){parent.getMap()},function(){var map=parent.getMap(),decimals=$scope.decimals,events=$scope.events?$scope.events:{},opts=$scope.options?$scope.options():{},round=function(val){return decimals||0===decimals?Math.round(Math.pow(10,decimals)*val)/Math.pow(10,decimals):val},curPosition=function(){return $scope.position?new google.maps.LatLng($scope.position[0],$scope.position[1]):$scope.lat&&$scope.lng?new google.maps.LatLng($scope.lat,$scope.lng):void 0};opts.position=curPosition(),opts.map=map;var marker=new google.maps.Marker(opts);angular.forEach(events,function(val,key){google.maps.event.addListener(marker,key,function(e){val(e,marker,MapObjects)})}),$scope.$watch("[position, lat, lng]",function(){marker.setPosition(curPosition())},!0),google.maps.event.addListener(marker,"drag",function(){$scope.$apply(function(){var lat=round(marker.getPosition().lat()),lng=round(marker.getPosition().lng());$scope.position?$scope.position=[lat,lng]:$scope.lat&&$scope.lng&&($scope.lat=lat,$scope.lng=lng)})})})}}}]),angular.module("ngMaps").directive("overlay",["MapObjects",function(){return{restrict:"E",scope:{url:"=",events:"=",opacity:"=",options:"=",bounds:"=",visible:"="},require:"^map",link:function($scope,$element,$attrs,parent){$scope.$watch(function(){parent.getMap()},function(){function isFloat(n){return n===+n&&n!==(n||0)}var map=parent.getMap(),parseOpacity=function(){return isFloat($scope.opacity)?$scope.opacity:parseFloat($scope.opacity)},deleteOverlay=function(){overlay&&(overlay.setMap(null),overlay=null)},newOverlay=function(){deleteOverlay();var bounds;if($scope.bounds.constructor===Array){var SW=new google.maps.LatLng($scope.bounds[0][0],$scope.bounds[0][1]),NE=new google.maps.LatLng($scope.bounds[1][0],$scope.bounds[1][1]);bounds=new google.maps.LatLngBounds(SW,NE)}else bounds=$scope.bounds;var opts=$scope.options?$scope.options():{},overlay=new google.maps.GroundOverlay($scope.url,bounds,opts);return overlay.setOpacity(parseOpacity()/100),overlay.setMap($scope.visible!==!1?map:null),overlay},overlay=newOverlay();$scope.$watch("url + bounds",function(){overlay=newOverlay()}),$scope.$watch("opacity",function(){overlay.setOpacity(parseOpacity()/100)}),$scope.$watch("visible",function(){overlay.setMap($scope.visible!==!1?map:null)})})}}}]),angular.module("ngMaps").directive("points",["MapObjects",function(MapObjects){return{restrict:"E",scope:{coords:"=",options:"=",properties:"=",events:"=",visible:"=",decimals:"="},require:"^map",link:function($scope,$element,$attrs,parent){$scope.$watch(function(){parent.getMap()},function(){var map=parent.getMap(),points=[],round=function(val){return $scope.decimals||0===$scope.decimals?Math.round(Math.pow(10,$scope.decimals)*val)/Math.pow(10,$scope.decimals):val};$scope.$watch("coords",function(){newCoords($scope.coords)}),$scope.$watch("visible",function(){angular.forEach(points,function(p){p.setVisible($scope.visible)})}),$scope.$watch("options",function(){angular.forEach(points,function(p,i){p.setOptions($scope.options(p,map,i,MapObjects))})});var newCoords=function(coords){angular.forEach(points,function(p){p.setMap(null)}),points=[],angular.forEach(coords,function(c,i){var opts=$scope.options?$scope.options(c,i,map,MapObjects):{};opts.position=new google.maps.LatLng(c[0],c[1]),opts.map=map;var point=new google.maps.Marker(opts);angular.forEach($scope.events,function(val,key){google.maps.event.addListener(point,key,function(e){val(e,this,MapObjects)})}),google.maps.event.addListener(point,"drag",function(){$scope.$apply(function(){var lat=round(point.getPosition().lat()),lng=round(point.getPosition().lng());$scope.coords[i]=[lat,lng]})}),points.push(point)})}})}}}]),angular.module("ngMaps").directive("polygons",["MapObjects",function(MapObjects){return{restrict:"E",scope:{coords:"=",options:"=",properties:"=",opacity:"=",events:"=",visible:"="},require:"^map",link:function($scope,$element,$attrs,parent){$scope.$watch(function(){parent.getMap()},function(){var map=parent.getMap(),polygons=[];$scope.$watch("options",function(){angular.forEach(polygons,function(p){var opts=$scope.options?$scope.options(p,MapObjects):{};opts.fillOpacity=$scope.opacity?$scope.opacity/100:1,p.setOptions(opts)})}),$scope.$watch("opacity",function(){angular.forEach(polygons,function(p){p.setOptions({fillOpacity:$scope.opacity/100})})}),$scope.$watch("visible",function(){angular.forEach(polygons,function(p){p.setVisible($scope.visible)})}),$scope.$watch("coords",function(){newData($scope.coords)});var newData=function(coords){angular.forEach(polygons,function(p){p.setMap(null)}),polygons=[],angular.forEach(coords,function(c,i){var opts=$scope.options?$scope.options(polygon,MapObjects):{};opts.fillOpacity=$scope.opacity?$scope.opacity/100:1,opts.path=[],opts.map=map;for(var j=0;j<c.length;j++)for(var k=0;k<c[j].length;k++)opts.path.push(new google.maps.LatLng(c[j][k][0],c[j][k][1]));var polygon=new google.maps.Polygon(opts);$scope.properties&&(polygon.properties=$scope.properties[i]),polygon.getProperty=function(p){return this.properties[p]},polygons.push(polygon),angular.forEach($scope.events,function(val,key){google.maps.event.addListener(polygon,key,function(e){val(e,this,MapObjects)})})})}})}}}]),angular.module("ngMaps").directive("polylines",["MapObjects",function(MapObjects){return{restrict:"E",scope:{coords:"=",options:"=",visible:"="},require:"^map",link:function($scope,$element,$attrs,parent){$scope.$watch(function(){parent.getMap()},function(){var map=parent.getMap(),lines=[];$scope.$watch("coords",function(){newData($scope.coords)}),$scope.$watch("visible",function(){angular.forEach(lines,function(l){l.setVisible($scope.visible)})}),$scope.$watch("options",function(){angular.forEach(lines,function(l){l.setOptions($scope.options(l,map,MapObjects))})});var newData=function(coords){angular.forEach(lines,function(l){l.setMap(null)}),lines=[],angular.forEach(coords,function(l){var opts=$scope.options?$scope.options(l,map,MapObjects):{};opts.path=[],angular.forEach(l,function(c){opts.path.push(new google.maps.LatLng(c[0],c[1]))}),opts.map=map;var polyline=new google.maps.Polyline(opts);lines.push(polyline)})}})}}}]),angular.module("ngMaps").directive("rectangles",["MapObjects","$rootScope",function(MapObjects,$rootScope){return{restrict:"E",scope:{bounds:"=",events:"=",visible:"=",options:"=",opacity:"=",decimals:"="},require:"^map",link:function($scope,$element,$attrs,parent){$scope.$watch(function(){parent.getMap()},function(){var map=parent.getMap(),rectangles=[],decimals=$scope.decimals,round=function(val){return decimals||0===decimals?Math.round(Math.pow(10,decimals)*val)/Math.pow(10,decimals):val};$scope.$watch("visible",function(){angular.forEach(rectangles,function(r){r.setVisible($scope.visible)})}),$scope.$watch("options",function(){angular.forEach(rectangles,function(r,i){r.setOptions($scope.options(r,map,i,MapObjects))})}),$scope.$watch("bounds",function(){newData()}),$scope.$watch("opacity",function(){$scope.opacity&&angular.forEach(rectangles,function(r){r.setOptions({fillOpacity:$scope.opacity/100})})});var newData=function(){angular.forEach(rectangles,function(r){r.setMap(null)}),rectangles=[],angular.forEach($scope.bounds,function(r,i){var opts=$scope.options?$scope.options(r,map,i,MapObjects):{};if(r.constructor===Array){var SW=new google.maps.LatLng(r[0][0],r[0][1]),NE=new google.maps.LatLng(r[1][0],r[1][1]);opts.bounds=new google.maps.LatLngBounds(SW,NE)}else opts.bounds=r;opts.map=map;var rect=new google.maps.Rectangle(opts);rectangles.push(rect),angular.forEach($scope.events,function(val,key){google.maps.event.addListener(rect,key,function(e){val(e,this,i,MapObjects,rectangles)})}),google.maps.event.addListener(rect,"bounds_changed",function(){var b=rect.getBounds(),SW=b.getSouthWest(),NE=b.getNorthEast();$scope.bounds[i]=[[round(SW.k),round(SW.B)],[round(NE.k),round(NE.B)]],$rootScope.$apply()})})}})}}}]);